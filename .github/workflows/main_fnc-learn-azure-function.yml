# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Java project to Azure Function App - fnc-learn-azure-function

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_NAME: fnc-learn-azure-function # set this to your function app name on Azure
  PACKAGE_DIRECTORY: '.' # set this to the directory which contains pom.xml file
  JAVA_VERSION: '11' # set this to the java version to use

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Install Azure Functions Core Tools
        run: |
          npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Display host.json
        run: cat ./src/main/azure/host.json

      - name: 'Restore Project Dependencies Using Mvn'
        shell: bash
        run: |
          pushd './${{ env.PACKAGE_DIRECTORY }}'
          mvn clean package
          popd

      - name: Verify Build Output Directory
        run: |
          if [ ! -d "./${{ env.PACKAGE_DIRECTORY }}/target/azure-functions/${{ env.AZURE_FUNCTIONAPP_NAME }}" ]; then
            echo "Build output directory does not exist."
            exit 1
          fi

      - name: Archive Files
        run: |
          mkdir -p package
          cd './${{ env.PACKAGE_DIRECTORY }}/target/azure-functions/${{ env.AZURE_FUNCTIONAPP_NAME }}'
          zip -r ../../../../package/${{ env.AZURE_FUNCTIONAPP_NAME }}.zip .

      - name: Publish Pipeline Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${AZURE_FUNCTIONAPP_NAME}
          path: ./package/${AZURE_FUNCTIONAPP_NAME}.zip
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5045EDBA81AC4C23B8B05F1C2488CD67 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7FE0F19B192B4A55B61839E79C17DC32 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_17BE4E80E6AC4C2EB2F8DB952F05EC16 }}

      - name: Upload to Azure Storage
        run: |
          az storage blob upload --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} --container-name ${{ env.AZURE_STORAGE_CONTAINER }} --name ${{ env.AZURE_FUNCTIONAPP_NAME }}.zip --file ./package/${{ env.AZURE_FUNCTIONAPP_NAME }}.zip --auth-mode key
          sas_token=$(az storage blob generate-sas --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} --container-name ${{ env.AZURE_STORAGE_CONTAINER }} --name ${{ env.AZURE_FUNCTIONAPP_NAME }}.zip --permissions r --expiry 2025-06-26 --output tsv)
          blob_url=$(az storage blob url --account-name ${{ env.AZURE_STORAGE_ACCOUNT }} --container-name ${{ env.AZURE_STORAGE_CONTAINER }} --name ${{ env.AZURE_FUNCTIONAPP_NAME }}.zip --output tsv)
          full_blob_url="$blob_url?$sas_token"
          echo "##[set-output name=blob-url;]$full_blob_url"

      - name: Update Function App Setting
        run: |
          az functionapp config appsettings set --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --settings "WEBSITE_RUN_FROM_PACKAGE=${{ steps.upload-to-azure-storage.outputs.blob-url }}"

      - name: Restart Function App
        run: |
          az functionapp restart --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
